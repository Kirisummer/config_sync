# vim:ft=bash

source __lookup

validate_login() {
    local login="$1"
    if ! [[ $login =~ [A-Za-z0-9_.-]+ ]]; then
        printf '%s: Invalid login: `%s`' "$0" "$login"
        false
    fi
}

validate_repo_name() {
    local repo="$1"
    if ! ( grep -qE '^([[:alnum:]]|[ _.-])+$' <<< "$repo" ); then
        printf '%s: Invalid repo name: `%s`' "$0" "$repo"
        false
    fi
}

check_user_exists() {
    local login="$1"
    if ! user_exists $login; then
        printf '%s: User does not exist: `%s`' "$0" "$login"
        false
    fi
}

check_user_not_exists() {
    local login="$1"
    if user_exists $login; then
        printf '%s: User exists: `%s`' "$0" "$login"
        false
    fi
}

check_is_admin() {
    local login="$1"

    local role=$(get_role $login)
    if [[ $role != admin ]]; then
        printf '%s: Not an admin: `%s`' "$0" "$login"
        false
    fi
}

check_not_admin() {
    local login="$1"

    local role=$(get_role $login)
    if [[ $role == admin ]]; then
        printf '%s: Is admin: `%s`' "$0" "$login"
        false
    fi
}

check_repo_exists() {
    local repo="$1"

    #if [ ! -d "$REPO_DIR"/"$repo" ]; then
    if ! repo_exists "$repo"; then
        printf '%s: Repo does not exist: `%s`' "$0" "$repo"
        false
    fi
}

check_repo_not_allowed() {
    local login="$1"
    local repo="$2"

    if repo_allowed "$login" "$repo"; then
        printf '%s: Repo is allowed: login=`%s` repo=`%s`' "$0" "$login" "$repo"
        false
    fi
}

check_repo_allowed() {
    local login="$1"
    local repo="$2"

    if ! repo_allowed "$login" "$repo"; then
        printf '%s: Repo is not allowed: login=`%s` repo=`%s`' "$0" "$login" "$repo"
        false
    fi
}

